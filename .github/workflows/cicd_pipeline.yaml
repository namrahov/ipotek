name: Build and Deploy

on: push

env:
  APP_NAME: ms-retail-products-info

jobs:
  validate-code:
    runs-on: [ self-hosted, linux, dev ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build and Test
        uses: pb-digital/actions/go-build@v1
  validate-infra:
    runs-on: [ self-hosted, linux, kubectl, dev ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Validate
        id: validate
        uses: pb-digital/actions/validate-msc@v1
        with:
          k8s-context: ${{ secrets.AWS_K8S_CONTEXT_DEV }}
  gosec-scan:
    runs-on: [ self-hosted, linux, dev ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Gosec scan
        uses: pb-digital/actions/gosec@v1
  gosec-send:
    if: ${{ github.ref_name == 'develop' }}
    runs-on: [ self-hosted, linux, dev ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Gosec scan
        uses: pb-digital/actions/gosec@v1
        with:
          send-results: "true"
          url: ${{ secrets.INFO_SEC_URL }}
          user: ${{ secrets.INFO_SEC_USER }}
          password: ${{ secrets.INFO_SEC_PASS }}
  send-to-sonar:
    needs: [ validate-code ]
    runs-on: [ self-hosted, linux, dev ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Tests
        uses: pb-digital/actions/go-build@v1
        with:
          test-only: true
      - name: Send to Sonar
        uses: pb-digital/actions/send-to-sonar@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          sonar-organization: ${{ secrets.SONAR_ORGANIZATION }}
          sonar-login: ${{ secrets.SONAR_LOGIN }}
  deploy_dev:
    if: ${{ github.ref_name == 'develop' }}
    needs: [ validate-code, validate-infra ]
    runs-on: [ self-hosted, linux, docker, kubectl, dev ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        uses: pb-digital/actions/go-build@v1
        with:
          build-only: true
      - name: "Deploy"
        id: deploy
        uses: pb-digital/actions/deploy-msc@v1
        with:
          appName: $APP_NAME
          dockerRepo: ${{ secrets.AWS_DOCKER_REPO_DEV }}
          k8s-context: ${{ secrets.AWS_K8S_CONTEXT_DEV }}
          additional-tag: dev
  deploy_prod:
    if: ${{ github.ref_name == 'master' }}
    needs: [ validate-code, validate-infra ]
    runs-on: [ self-hosted, linux, docker, kubectl, prod ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        uses: pb-digital/actions/go-build@v1
        with:
          build-only: true
      - name: "Deploy"
        id: deploy
        uses: pb-digital/actions/deploy-msc@v1
        with:
          appName: $APP_NAME
          dockerRepo: ${{ secrets.AWS_DOCKER_REPO_PROD }}
          k8s-context: ${{ secrets.AWS_K8S_CONTEXT_PROD }}
          additional-tag: prod
  deploy_reserve:
    if: ${{ github.ref_name == 'master' }}
    needs: [ validate-code, validate-infra ]
    runs-on: [ self-hosted, linux, docker, kubectl, prod ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        uses: pb-digital/actions/go-build@v1
        with:
          build-only: true
      - name: "Deploy"
        id: deploy
        uses: pb-digital/actions/deploy-msc@v1
        with:
          appName: $APP_NAME
          dockerRepo: ${{ secrets.AWS_DOCKER_REPO_RSRV }}
          k8s-context: ${{ secrets.AWS_K8S_CONTEXT_RSRV }}
          additional-tag: rsrv
